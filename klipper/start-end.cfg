# ; --- Prusa Slicer START Gcode for Ender 5 S1 ---
# ;--------
# ; KLIPPER
# SET_PRINT_STATS_INFO TOTAL_LAYER=[total_layer_count]
# M190 S0 ; Prevents prusaslicer from prepending m190 to the gcode ruining our macro
# M109 S0 ;  Prevents prusaslicer from prepending m109 to the gcode ruining our macro
# START_PRINT FILAMENT=[filament_diameter] FILAMENT_TYPE=[filament_type] BED_TEMP=[first_layer_bed_temperature] EXTRUDER_TEMP=[first_layer_temperature] AREA_START={first_layer_print_min[0]},{first_layer_print_min[1]} AREA_END={first_layer_print_max[0]},{first_layer_print_max[1]}
# ;--------
# ;--------#
# ; --- Prusa Slicer END Gcode for Ender 5 S1 ---
# ; total layers count = [total_layer_count]
# END_PRINT
# ;--------
#
# ;--------
# ; --- Prusa Slicer Before Layer Change Gcode for Ender 5 S1 ---
# ;HEIGHT={layer_height} LAYER={layer_z}
# TIMELAPSE_TAKE_FRAME
# G92 E0
# ;--------
#
# ; --- Prusa Slicer After Layer Change Gcode for Ender 5 S1 ---
# ;{layer_z}
# SET_PRINT_STATS_INFO CURRENT_LAYER={layer_num + 1}
# ;--------
#
# ; Prusa Slicer Filament gcode (PETG)
# ; PETG
# ;
# ; PETG Z offset
# ; SET_GCODE_OFFSET Z_ADJUST=0.05 ; DISABLED - doing in a macro

[gcode_macro START_PRINT]
gcode:
    #Get Bed, Extruder temperatures from Slicer GCode
    {% set BED_TEMP = params.BED_TEMP|default(70)|float %}
    {% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(205)|float %}
    {% set NOZZLE = params.NOZZLE|default(0.6)|float %}
    {% set FILAMENT = params.FILAMENT|default(1.75)|float %}
    {% set FILAMENT_TYPE = params.FILAMENT_TYPE|default(pla)|string %}
    {% set WARM_X = params.WARM_X|default(3)|float %} ; Where to park while warming
    {% set WARM_Y = params.WARM_Y|default(5)|float %} ; Where to park while warming
    {% set EXTRUSION_MULTIPLIER = params.EXTRUSION_MULTIPLIER|default(1.0)|float %}
    {% set EXTRA_Z_FOR_PETG = params.EXTRA_Z_FOR_PETG|default(0.04)|float %} ; Extra Z offset for PETG printing

    ; Start pre-heating the bed
    M140 S{BED_TEMP}  ; Start pre-heating the bed

    HOME_IF_NEEDED ; only home an axis if it's not homed

    BED_MESH_PROFILE LOAD=default ; Load the calibrated bed mesh profile
    RESPOND TYPE=command MSG="Loaded default mesh profile"

    RESPOND TYPE=command MSG="Filament Type = {FILAMENT_TYPE}"

    # If we're printing with PETG prime at a slightly higher Z so it doesn't stick to be bed too much
    {% if FILAMENT_TYPE == "PETG" %}
        RESPOND TYPE=command MSG="!PETG detected - adding {EXTRA_Z_FOR_PETG} to the Z offset to prevent it welding to the bed!"
        SET_GCODE_OFFSET Z_ADJUST={EXTRA_Z_FOR_PETG}
    {% endif %}

    # Move near the priming start position to prevent blobbing in the print area
    RESPOND TYPE=command MSG="Moving to front left of bed while we wait for priming temp..."
    G90 ; Relative positioning
    G1 X{WARM_X} Y{WARM_Y} F6000 ; Move to front left of bed while we wait for the tempratures for priming

    ; mesh print area only - TBC if this works well
    # PRINT_AREA_MESH_CALIBRATE AREA_START={params.AREA_START} AREA_END={params.AREA_END}

    ; Start pre-heating the extruder once the bed is at least 65% of the target temp
    TEMPERATURE_WAIT SENSOR=heater_bed MINIMUM={BED_TEMP*0.65} MAXIMUM={BED_TEMP+10}
    RESPOND TYPE=command MSG="Bed is at least 65% of target temp - starting to heat extruder..."
    M104 S{EXTRUDER_TEMP} T0 ;	Start heating extruder to target temp

    TEMPERATURE_WAIT SENSOR=heater_bed MINIMUM={BED_TEMP-4} MAXIMUM={BED_TEMP+10}
    TEMPERATURE_WAIT SENSOR=extruder MINIMUM={EXTRUDER_TEMP-6} MAXIMUM={EXTRUDER_TEMP+9}

    ; PRIME_NOZZLE ; Draw Nozzle Cleaning lines on the Left Side of Bed to prime the nozzle
    PRIME_NOZZLE FILAMENT_TYPE={FILAMENT_TYPE} NOZZLE={NOZZLE} EXTRUSION_MULTIPLIER={EXTRUSION_MULTIPLIER}

    SKEW_PROFILE LOAD=default ; Load the calibrated skew profile (after purging etc...)
    RESPOND TYPE=command MSG="Loaded default skew profile"

    # {FIRST_LAYERS_ACCELERATION} ; Set the acceleration for the first number of layers - see macros.cfg

    RESPOND TYPE=command MSG="Printing..."

[gcode_macro END_PRINT]
gcode:
    RESPOND TYPE=command MSG="Print Completed"

    M104 S0 ;Turn-off hotend
    M140 S0 ;Turn-off bed
    M106 S0 ;Turn-off fan

    #Get Printer built volume dimensions
    {% set X_MAX = printer.toolhead.axis_maximum.x|default(210)|float %}
    {% set Y_MAX = printer.toolhead.axis_maximum.y|default(210)|float %}

    {% if printer.extruder.temperature >= 170 %}
      #Retract if we're still hot
      G91 ;Absolute positioning
      G1 E-2 F2700
      G1 E-1.5 Z0.2 F2400
    {% endif %}

    #Present print
    G90 ;Relative positioning
    G1 Z{printer.toolhead.position.z + 10} F600  ;Raise nozzle by 10mm
    G1 X{X_MAX / 2} Y{Y_MAX} F6000 ;Present Print
    M84 X Y E ;Power off all steppers except Z

    RESPOND TYPE=command MSG="Resetting speeds to default"
    M220 S100 ; Reset Speed factor override percentage to default (100%)
    M221 S100 ; Reset Extrude factor override percentage to default (100%)

    SET_SKEW CLEAR=1 ; Clear the SKEW profile
    RESPOND TYPE=command MSG="Skew profile cleared"

    SET_GCODE_OFFSET Z_ADJUST=0
    SET_GCODE_OFFSET Z=0.0
    RESPOND TYPE=command MSG="GCODE Z offset cleared"

    G92 E0 ; reset extruder

    SAVE_IF_SET ;If SAVE_AT_END has been issued, save the current config

[gcode_macro PAUSE]
description: Pause the actual running print
rename_existing: PAUSE_BASE
# change this if you need more or less extrusion
variable_extrude: 1.0
gcode:
  ##### read E from pause macro #####
  {% set E = printer["gcode_macro PAUSE"].extrude|float %}
  ##### set park positon for x and y #####
  # default is your max posion from your printer.cfg
  {% set x_park = printer.toolhead.axis_maximum.x|float - 5.0 %}
  {% set y_park = printer.toolhead.axis_maximum.y|float - 5.0 %}
  ##### calculate save lift position #####
  {% set max_z = printer.toolhead.axis_maximum.z|float %}
  {% set act_z = printer.toolhead.position.z|float %}
  {% if act_z < (max_z - 2.0) %}
      {% set z_safe = 2.0 %}
  {% else %}
      {% set z_safe = max_z - act_z %}
  {% endif %}
  ##### end of definitions #####
  M114 # Get current position
  PAUSE_BASE
  # Send a mobileraker alert
  M117 $MR$:!ACTION REQUIRED - PRINTER PAUSED!|The printer has been paused.
  G91
  {% if printer.extruder.can_extrude|lower == 'true' %}
    G1 E-{E} F2100
  {% else %}
    {action_respond_info("Extruder not hot enough")}
  {% endif %}
  {% if "xyz" in printer.toolhead.homed_axes %}
    G1 Z{z_safe} F900
    G90
    G1 X{x_park} Y{y_park} F6000
  {% else %}
    {action_respond_info("Printer not homed")}
  {% endif %}
  M114 # Get current position


[gcode_macro RESUME]
description: Resume the actual running print
rename_existing: RESUME_BASE
gcode:
  ##### read E from pause macro #####
  {% set E = printer["gcode_macro PAUSE"].extrude|float %}
  #### get VELOCITY parameter if specified ####
  {% if 'VELOCITY' in params|upper %}
    {% set get_params = ('VELOCITY=' + params.VELOCITY)  %}
  {%else %}
    {% set get_params = "" %}
  {% endif %}
  ##### end of definitions #####
  M114 # Get current position
  {% if printer.extruder.can_extrude|lower == 'true' %}
    G91
    G1 E{E} F2100
  {% else %}
    {action_respond_info("Extruder not hot enough")}
  {% endif %}
  RESUME_BASE {get_params}
  M114 # Get current position

[gcode_macro CANCEL_PRINT]
description: Cancel the actual running print
rename_existing: CANCEL_PRINT_BASE
gcode:
    M220 S100 ; Reset Speed factor override percentage to default (100%)
    M221 S100 ; Reset Extrude factor override percentage to default (100%)
    G1 E-2 F2200 ; Retract
    TURN_OFF_HEATERS
    G91
    G1 Z10 F300
    G90
    G1 Y200 F2000
    M84

    SET_SKEW CLEAR=1 ; Clear the SKEW profile
    RESPOND TYPE=command MSG="Skew profile cleared"

    SET_GCODE_OFFSET Z_ADJUST=0
    SET_GCODE_OFFSET Z=0.0
    RESPOND TYPE=command MSG="GCODE Z offset cleared"

    G92 E0 ; reset extruder

    # Send a mobileraker alert
    M117 $MR$:!PRINT CANCELLED!|The print has been cancelled
    CANCEL_PRINT_BASE

[gcode_macro BLOB_CLEAR_HERE]
description: Clear the blob from the nozzle at the current location
gcode:
    # The height from the bed to clear the blob (usually your)
    {% set PRIMER_HEIGHT = params.PRIMER_HEIGHT|default(0.42)|float %}
    G1 Z{PRIMER_HEIGHT} F800
    G1 Z2.0 F850
    G1 Z{PRIMER_HEIGHT} F800
    G1 Z3.0 F850
    G1 Z{PRIMER_HEIGHT} F800
    G1 Z5.0 F850

[gcode_macro PRIME_NOZZLE]
description: Primes the nozzle and extruder for printing
gcode:
    # Set default parameters
    {% set X_START = params.X_START|default(3)|float %}
    {% set Y_START = params.Y_START|default(5)|float %}
    {% set X_END = params.X_END|default(215)|float %}
    {% set Y_END = params.Y_END|default(210)|float %}
    {% set EXTRUSION_MULTIPLIER = params.EXTRUSION_MULTIPLIER|default(1.0)|float %}
    {% set PRIME_AXIS = params.PRIME_AXIS|default("Y")|string %}
    {% set LINE_SPACING = params.LINE_SPACING|default(1)|float %}

    # Get Nozzle diameter and filament width for conditioning
    {% set NOZZLE = printer.extruder.nozzle_diameter|default(0.6)|float %}
    {% set FILADIA = printer.extruder.filament_diameter|default(1.75)|float %}

    # Calculate Primer line extrusion volume and filament length
    {% set PRIMER_WIDTH = 0.75 * NOZZLE %}
    {% set PRIMER_HEIGHT = 0.70 * NOZZLE %}
    {% set PRIMER_SECT = PRIMER_WIDTH * PRIMER_HEIGHT %}
    {% set PRIMER_VOL = PRIMER_SECT * (X_END - X_START) %}
    {% set FILA_SECT = 3.1415 * ( FILADIA / 2.0)**2 %}
    {% set FILA_LENGTH = 1.55 * PRIMER_VOL / FILA_SECT %}
    {% set MAX_EXTRUSION = 0.640 %}

    # Check for extrusion limit
    {% if PRIMER_SECT > MAX_EXTRUSION %}
        {% set PRIMER_SECT = MAX_EXTRUSION %}
    {% endif %}

    RESPOND TYPE=command MSG="Priming Nozzle and Preconditioning Extruder"

    G1 Z0.28 F240 ; Move Z Axis up little to prevent scratching of Heat Bed
    G1 X{X_START} Y{Y_START} Z{PRIMER_HEIGHT} F5000.0 ; Move to start position
    G1 Z{PRIMER_HEIGHT} F800  ; Mini blob clear
    G1 Z5.0 F850

    {% if PRIME_AXIS == "Y" or PRIME_AXIS == "BOTH" %}
        ; Prime extruder in the Y direction
        RESPOND TYPE=command MSG="Priming Y: X{X_START} Y{Y_START} Z{PRIMER_HEIGHT}"
        G92 E0 ; Reset Extruder
        G1 X{X_START} Y{Y_START} Z{PRIMER_HEIGHT} F5000.0 ; Move to start position
        G1 Y{Y_END} E{FILA_LENGTH * EXTRUSION_MULTIPLIER} F2200.0 ; Draw the first line
        G1 X{X_START + LINE_SPACING} F5000.0 ; Move to the second line start position in Y direction
        G1 Y{Y_START} E{FILA_LENGTH * EXTRUSION_MULTIPLIER} F2000.0 ; Draw the second line

        G1 Y{Y_START + 2.5} F800 ; move across slightly and clear blobs again
        BLOB_CLEAR_HERE PRIMER_HEIGHT={PRIMER_HEIGHT}
    {% endif %}

    {% if PRIME_AXIS == "X" or PRIME_AXIS == "BOTH" %}
        ; Prime extruder in the X direction
        RESPOND TYPE=command MSG="Priming X: X{X_START} Y{Y_START + LINE_SPACING} Z{PRIMER_HEIGHT}"
        G92 E0 ; Reset Extruder
        G1 X{X_START} Y{Y_START + LINE_SPACING} Z{PRIMER_HEIGHT} F5000.0 ; Move to start position for X direction
        G1 X{X_END} E{FILA_LENGTH * EXTRUSION_MULTIPLIER} F2200.0 ; Draw the first line in X direction
        G1 Y{Y_START + 2 * LINE_SPACING} F5000.0 ; Move to the second line start position in X direction
        G1 X{X_START} E{FILA_LENGTH * EXTRUSION_MULTIPLIER} F2000.0 ; Draw the second line in X direction

        G1 X{X_START + 2} F2000.0 ; move across slightly and clear blobs again
        BLOB_CLEAR_HERE PRIMER_HEIGHT={PRIMER_HEIGHT}
    {% endif %}

    G1 X{X_START + 3} Y{Y_START + 3} F2000 ; move out of any blob path
    G1 Z2.0 ; fin
