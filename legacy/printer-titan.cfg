# !Ender-3 V2 Neo
# printer_size: 220x220x250
# version: 3.2
# E3D Titan Extruder
# Creality Spider 2(?) hot end
# Dual 5015 part cooling fans
# This file contains pin mappings for the stock 2020 Creality Ender-3 V2+CRtouch
# To use this config, during "make menuconfig" select the
# STM32F103 with a "28KiB bootloader" and serial (on USART1 PA10/PA9)
# communication.

# If you prefer a direct serial connection, in "make menuconfig"
# select "Enable extra low-level configuration options" and select
# serial (on USART3 PB11/PB10), which is broken out on the 10 pin IDC
# cable used for the LCD module as follows:
# 3: Tx, 4: Rx, 9: GND, 10: VCC

# Flash this firmware by copying "out/klipper.bin" to a SD card and
# turning on the printer with the card inserted. The firmware
# filename must end in ".bin" and must not match the last filename
# that was flashed.

# See docs/Config_Reference.md for a description of parameters.

# Sams changes
# Reduce max X from 240 to 230

###fluidd set
[virtual_sdcard]
path: ~/gcode_files

[display_status]

[include start-end.cfg]

[include timelapse.cfg]

# [include mesh-print-area-only.cfg]

# [include shell_commands.cfg]

# [include OrbiterSensor.cfg] NEED TO FIGURE OUT WHICH PIN TO USE
# [include jschuh-klipper-macros/bed_mesh_fast.cfg]
[include jschuh-klipper-macros/idle.cfg]

[include jschuh-klipper-macros/kinematics.cfg]
# [include calibrate-flow.cfg]
# FLOW_MULTIPLIER_CALIBRATION [with the needed args...]
# See https://github.com/Frix-x/klipper-voron-V2/blob/main/doc/features/flow_calibration.md#usage
# [include calibrate-pa.cfg]
# PRESSURE_ADVANCE_CALIBRATION START=0.01 INCREMENT=0.0025 RAFT=1 OUTER_SPEED=20 INNER_SPEED=200 PURGE_MM=4 LINES_PER_BAND=2
# then NEW_PA = START + (INCREMENT * band_number)
# See https://github.com/Frix-x/klipper-voron-V2/blob/main/doc/features/pa_calibration.md

# [include calibrate-vibr.cfg]
# See https://github.com/Frix-x/klipper-voron-V2/blob/main/doc/features/vibr_measurements.md

# [exclude_object]

[stepper_x]
step_pin: PC2
dir_pin: PB9
enable_pin: !PC3
microsteps: 16
rotation_distance: 40
endstop_pin: ^PA5
position_endstop: 0
position_max: 234
# position_min: -10
homing_speed: 80

[stepper_y]
step_pin: PB8
dir_pin: PB7
enable_pin: !PC3
microsteps: 16
rotation_distance: 40
endstop_pin: ^PA6
position_endstop: 0
position_max: 225
homing_speed: 80

[stepper_z]
step_pin: PB6
dir_pin: !PB5
enable_pin: !PC3
microsteps: 16
rotation_distance: 8
endstop_pin: probe:z_virtual_endstop
position_max: 255
position_min: -10
homing_speed: 4
second_homing_speed: 1
homing_retract_dist: 2.0

[extruder]
max_extrude_only_distance: 1000.0
step_pin: PB4
dir_pin: PB3
enable_pin: !PC3
microsteps: 16
rotation_distance: 7.8817733990147785
nozzle_diameter: 0.600
filament_diameter: 1.750
heater_pin: PA1
sensor_type: EPCOS 100K B57560G104F
sensor_pin: PC5
#control: pid
# tuned for stock hardware with 200 degree Celsius target
#pid_Kp: 29.291
#pid_Ki: 1.743
#pid_Kd: 123.021
min_temp: 0
max_temp: 265
pressure_advance_smooth_time: 0.04
pressure_advance: 0.270
# tested to be best at 2.4mm height on https://www.thingiverse.com/thing:3442071

[verify_heater extruder]
check_gain_time: 200
hysteresis: 5

[heater_bed]
heater_pin: PA2
sensor_type: EPCOS 100K B57560G104F
sensor_pin: PC4
#control: pid
# tuned for stock hardware with 50 degree Celsius target
#pid_Kp: 67.104
#pid_Ki: 0.544
#pid_Kd: 2068.466
min_temp: 0
max_temp: 90

[fan]
pin: PA0
max_power: 0.45
#shutdown_speed:
#cycle_time:
#hardware_pwm:
#kick_start_time:
#off_below:
#tachometer_pin:
#tachometer_ppr:
#tachometer_poll_interval:
#   See the "fan" section for a description of the above parameters.
#heater: extruder
#   Name of the config section defining the heater that this fan is
#   associated with. If a comma separated list of heater names is
#   provided here, then the fan will be enabled when any of the given
#   heaters are enabled. The default is "extruder".
#heater_temp: 50.0
#   A temperature (in Celsius) that the heater must drop below before
#   the fan is disabled. The default is 50 Celsius.
#fan_speed: 1.0
#   The fan speed (expressed as a value from 0.0 to 1.0) that the fan
#   will be set to when its associated heater is enabled. The default
#   is 1.0

# [fan_generic extruder_partfan]
# pin: PB15
# pin: PC6
# max_power: 0.45

# [heater_fan heater_partfan]
# pin: PB14
#max_power:
#shutdown_speed:
#cycle_time:
#hardware_pwm:
#kick_start_time:
#off_below:
#tachometer_pin:
#tachometer_ppr:
#tachometer_poll_interval:
#   See the "fan" section for a description of the above parameters.
#heater: extruder
#   Name of the config section defining the heater that this fan is
#   associated with. If a comma separated list of heater names is
#   provided here, then the fan will be enabled when any of the given
#   heaters are enabled. The default is "extruder".
#heater_temp: 50.0
#   A temperature (in Celsius) that the heater must drop below before
#   the fan is disabled. The default is 50 Celsius.
#fan_speed: 1.0
#   The fan speed (expressed as a value from 0.0 to 1.0) that the fan
#   will be set to when its associated heater is enabled. The default
#   is 1.0

[mcu]
serial: /dev/serial/by-id/usb_serial_1
restart_method: command

[printer]
kinematics: cartesian
max_velocity: 300
max_accel: 5000
# max_accel_to_decel: 7000
max_z_velocity: 5
square_corner_velocity: 5.0
max_z_accel: 100

#[mcu rpi]
#serial: /tmp/klipper_host_mcu

#[adxl345]
#cs_pin: rpi:None
#spi_speed: 2000000
#spi_bus: spidev2.0

#[resonance_tester]
#accel_chip: adxl345
#accel_per_hz: 70
#probe_points:
#    117.5,117.5,10

[bltouch]
sensor_pin: ^PB1
control_pin: PB0
x_offset: -45.0
y_offset: -10.0
#z_offset: 0
speed: 20
samples: 1
sample_retract_dist: 8.0
stow_on_each_sample = false #high speed for bltoch

[safe_z_home]
home_xy_position: 160,120 # Change coordinates to the center of your print bed
speed: 150
z_hop: 10               # Move up 10mm
z_hop_speed: 10

[bed_mesh]
speed: 120
mesh_min: 30,30         #need to handle head distance with bl_touch
mesh_max: 189,189       #max probe range
probe_count: 5,5
fade_start: 1
fade_end: 10
fade_target: 0
algorithm: bicubic
# horizontal_move_z: 5

[bed_screws]
screw1:30,25
screw1_name:1
screw2:200,25
screw2_name:2
screw3:200,195
screw3_name:3
screw4:30,195
screw4_name:4

[input_shaper]
shaper_type_x = mzv
shaper_freq_x = 83.2
shaper_type_y = 2hump_ei
shaper_freq_y = 57.6



[gcode_macro G29]				#界面中增加G29指令
gcode:
  G28
  bed_mesh_calibrate
  G1 X0 Y0 Z10 F4200
  save_config

[gcode_macro BED_LEVEL]
gcode:
    G28
    BED_MESH_CALIBRATE

[gcode_macro Z_AXI_CALIBRATE]
gcode:
    G28
    PROBE_CALIBRATE

[gcode_macro SHAPER]
gcode:
    G28
    SHAPER_CALIBRATE

[gcode_macro PID]
gcode:
    G28
    PID_CALIBRATE HEATER=extruder TARGET=200
    PID_CALIBRATE HEATER=heater_bed TARGET=60

[gcode_macro Press_Advance_short]
gcode:
    SET_VELOCITY_LIMIT SQUARE_CORNER_VELOCITY=1 ACCEL=500
    TUNING_TOWER COMMAND=SET_PRESSURE_ADVANCE PARAMETER=ADVANCE START=0 FACTOR=.005

[gcode_macro Press_Advance_long]
gcode:
    SET_VELOCITY_LIMIT SQUARE_CORNER_VELOCITY=1 ACCEL=500
    TUNING_TOWER COMMAND=SET_PRESSURE_ADVANCE PARAMETER=ADVANCE START=0 FACTOR=.020


# [output_pin my_led]
# pin: PB12
#   The pin to configure as an output. This parameter must be
#   provided.
#pwm: False
#   Set if the output pin should be capable of pulse-width-modulation.
#   If this is true, the value fields should be between 0 and 1; if it
#   is false the value fields should be either 0 or 1. The default is
#   False.
#static_value:
#   If this is set, then the pin is assigned to this value at startup
#   and the pin can not be changed during runtime. A static pin uses
#   slightly less ram in the micro-controller. The default is to use
#   runtime configuration of pins.
#value:
#   The value to initially set the pin to during MCU configuration.
#   The default is 0 (for low voltage).
#shutdown_value:
#   The value to set the pin to on an MCU shutdown event. The default
#   is 0 (for low voltage).
#maximum_mcu_duration:
#   The maximum duration a non-shutdown value may be driven by the MCU
#   without an acknowledge from the host.
#   If host can not keep up with an update, the MCU will shutdown
#   and set all pins to their respective shutdown values.
#   Default: 0 (disabled)
#   Usual values are around 5 seconds.
#cycle_time: 0.100
#   The amount of time (in seconds) per PWM cycle. It is recommended
#   this be 10 milliseconds or greater when using software based PWM.
#   The default is 0.100 seconds for pwm pins.
#hardware_pwm: False
#   Enable this to use hardware PWM instead of software PWM. When
#   using hardware PWM the actual cycle time is constrained by the
#   implementation and may be significantly different than the
#   requested cycle_time. The default is False.
#scale:
#   This parameter can be used to alter how the 'value' and
#   'shutdown_value' parameters are interpreted for pwm pins. If
#   provided, then the 'value' parameter should be between 0.0 and
#   'scale'. This may be useful when configuring a PWM pin that
#   controls a stepper voltage reference. The 'scale' can be set to
#   the equivalent stepper amperage if the PWM were fully enabled, and
#   then the 'value' parameter can be specified using the desired
#   amperage for the stepper. The default is to not scale the 'value'
#   parameter.


### SAMS ADDITIONS ###


[fan]
# pin:
#   Output pin controlling the fan. This parameter must be provided.
max_power: 1
#   The maximum power (expressed as a value from 0.0 to 1.0) that the
#   pin may be set to. The value 1.0 allows the pin to be set fully
#   enabled for extended periods, while a value of 0.5 would allow the
#   pin to be enabled for no more than half the time. This setting may
#   be used to limit the total power output (over extended periods) to
#   the fan. If this value is less than 1.0 then fan speed requests
#   will be scaled between zero and max_power (for example, if
#   max_power is .9 and a fan speed of 80% is requested then the fan
#   power will be set to 72%). The default is 1.0.

[respond]
default_type: command

[pause_resume]
recover_velocity: 50

[screws_tilt_adjust]
screw1: 67, 42
screw1_name: front left screw
screw2: 237.60, 42
screw2_name: front right screw
screw3: 237.60, 212
screw3_name: rear right screw
screw4: 67.60, 212
screw4_name: rear left screw
horizontal_move_z: 10
speed: 200
screw_thread: CW-M4 # Use CW for Clockwise and CCW for Counter Clockwise

[gcode_arcs]
resolution: 0.2

[save_variables]
filename: ~/variables.cfg

[gcode_macro PRIME_NOZZLE]
description: Primes the nozzle and extruder for printing
gcode:
    #Get Printer built volume dimensions
    {% set X_MAX = printer.toolhead.axis_maximum.x|default(220)|float %}
    {% set Y_MAX = printer.toolhead.axis_maximum.y|default(220)|float %}
    {% set Z_MAX = printer.toolhead.axis_maximum.z|default(240)|float %}

    #Get Nozzle diameter and filament width for conditioning
    {% set NOZZLE = printer.extruder.nozzle_diameter|default(0.6)|float %}
    {% set FILADIA = printer.extruder.filament_diameter|default(1.75)|float %}

    #Set Start coordinates of priming lines
    {% set X_START = 5|default(5.0)|float %}
    {% set Y_START = 10|default(10.0)|float %}

    #Calculate Primer line extrusion volume and filament length
    {% set PRIMER_WIDTH = 0.75 * NOZZLE %}
    {% set PRIMER_HEIGHT = 0.70 * NOZZLE %}
    {% set PRIMER_SECT = PRIMER_WIDTH * PRIMER_HEIGHT %}
    {% set PRIMER_VOL = PRIMER_SECT * (X_MAX - 3 * X_START) %}
    {% set FILA_SECT = 3.1415 * ( FILADIA / 2.0)**2 %}
    {% set FILA_LENGTH = 1.55 * PRIMER_VOL / FILA_SECT %}
    {% set FILAMENT_TYPE = params.FILAMENT|default(PLA)|string %}

    #Get Bed, Extruder temperatures from Slicer GCode
    {% set BED_TEMP = params.BED|default(60)|float %}
    {% set EXTRUDER_TEMP = params.HOTEND|default(195)|float %}

    # Preheating
    M190 [S{BED_TEMP}]
    M109 [S{EXTRUDER_TEMP}]

    # Final heating
    M190 S{BED_TEMP}
    M109 S{EXTRUDER_TEMP}

    M117 Priming Nozzle...
    # Prime nozzle
    G1 Z0.28 F240
    G92 E0
    G1 Y140 E10 F1500 ; prime the nozzle
    G1 X2.3 F5000
    G92 E0
    G1 Y10 E10 F1200 ; prime the nozzle
    G92 E0

    M117 Preconditioning Extruder...
    #Precondition extruder
    G92 E0
    G1 X{X_START} Y{Y_START} Z{PRIMER_HEIGHT} F6000.0
    G1 X{X_MAX - 2 * X_START} Y{Y_START} Z{PRIMER_HEIGHT} F2000.0
    G1 X{X_MAX - 2 * X_START} Y{Y_START + PRIMER_WIDTH} Z{PRIMER_HEIGHT}
    G1 X{X_START} Y{Y_START + PRIMER_WIDTH} Z{PRIMER_HEIGHT} F2000.0
    G92 E0
    G1 Z2.0 F600
    G1 Z0.2 F600
    G1 Z2.0 F600
    G1 Z0.2 F600
    G1 Z5.0 F600


[output_pin beeper]
pin: PB13



# [display]
# lcd_type: st7920
# cs_pin: PB12
# sclk_pin: PB13 # it's not PB13 - that's the buzzer
# sid_pin: PB15
# # The pins to connect to a st7920 type lcd.
# encoder_pins: ^PB14, ^PB10
# click_pin: ^!PB2
# # These are the pins to enable the knob.

### End Sam

#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [bed_mesh default]
#*# version = 1
#*# points =
#*# 	  0.015000, 0.002500, 0.007500, -0.067500, 0.235000
#*# 	  0.010000, -0.022500, -0.007500, -0.085000, 0.230000
#*# 	  0.005000, -0.025000, -0.012500, -0.095000, 0.210000
#*# 	  -0.005000, -0.045000, -0.032500, -0.107500, 0.210000
#*# 	  0.082500, 0.062500, 0.070000, -0.007500, 0.295000
#*# tension = 0.2
#*# min_x = 30.0
#*# algo = bicubic
#*# y_count = 5
#*# mesh_y_pps = 2
#*# min_y = 30.0
#*# x_count = 5
#*# max_y = 189.0
#*# mesh_x_pps = 2
#*# max_x = 189.0
#*#
#*# [bltouch]
#*# z_offset = 1.600
#*#
#*# [extruder]
#*# control = pid
#*# pid_kp = 22.420
#*# pid_ki = 1.141
#*# pid_kd = 110.136
#*#
#*# [heater_bed]
#*# control = pid
#*# pid_kp = 70.405
#*# pid_ki = 1.229
#*# pid_kd = 1008.553
